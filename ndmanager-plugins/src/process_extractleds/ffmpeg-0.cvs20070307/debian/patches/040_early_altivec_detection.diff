Index: ffmpeg-0.cvs20070307/libavcodec/ppc/dsputil_altivec.c
===================================================================
--- ffmpeg-0.cvs20070307.orig/libavcodec/ppc/dsputil_altivec.c	2007-03-07 11:17:31.000000000 +0100
+++ ffmpeg-0.cvs20070307/libavcodec/ppc/dsputil_altivec.c	2007-03-07 15:04:26.000000000 +0100
@@ -1419,7 +1419,7 @@
     return score;
 }
 
-int has_altivec(void)
+static int has_altivec_inner(void)
 {
 #ifdef __AMIGAOS4__
     ULONG result = 0;
@@ -1463,6 +1463,15 @@
 #endif /* __AMIGAOS4__ */
 }
 
+int has_altivec(void)
+{
+    static int has_it = -1;
+    if (has_it < 0) {
+        has_it = has_altivec_inner();
+    }
+    return has_it;
+}
+
 static void vorbis_inverse_coupling_altivec(float *mag, float *ang,
                                             int blocksize)
 {
Index: ffmpeg-0.cvs20070307/libavcodec/dsputil.c
===================================================================
--- ffmpeg-0.cvs20070307.orig/libavcodec/dsputil.c	2007-03-07 14:37:04.000000000 +0100
+++ ffmpeg-0.cvs20070307/libavcodec/dsputil.c	2007-03-07 15:05:47.000000000 +0100
@@ -34,6 +34,11 @@
 #include "faandct.h"
 #include "snow.h"
 
+/* For PPC Use */
+#if HAVE_ALTIVEC==1
+extern int has_altivec(void);
+#endif
+
 /* snow.c */
 void ff_spatial_dwt(int *buffer, int width, int height, int stride, int type, int decomposition_count);
 
@@ -3793,6 +3798,9 @@
 {
     int i;
 
+#if HAVE_ALTIVEC==1
+    (void)has_altivec();
+#endif
     for(i=0;i<256;i++) ff_cropTbl[i + MAX_NEG_CROP] = i;
     for(i=0;i<MAX_NEG_CROP;i++) {
         ff_cropTbl[i] = 0;
